name: Build and Push Backend Template

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'prisma/**'
      - 'package*.json'
      - 'tsconfig.json'
      - 'Dockerfile'
      - '.github/version-config.json'
    tags:
      - 'backend-template-v*'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'prisma/**'
      - 'package*.json'
      - 'tsconfig.json'
      - 'Dockerfile'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: write
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Generate version and create tag
      id: version
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        chmod +x .github/scripts/generate-version.sh
        .github/scripts/generate-version.sh backend-template

  build-and-push:
    runs-on: ubuntu-latest
    needs: [version]
    if: always() && (needs.version.result == 'success' || github.event_name != 'push' || github.ref != 'refs/heads/main')
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=match,pattern=backend-template-v(.*),group=1
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ needs.version.outputs.version }},enable=${{ needs.version.outputs.version != '' }}
        labels: |
          org.opencontainers.image.title=Backend Template
          org.opencontainers.image.description=Node.js/TypeScript backend template with Auth, API Keys, Logging, and OpenAPI
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ needs.version.outputs.version }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        build-args: |
          NODE_OPTIONS=--max-old-space-size=4096
          BUILD_VERSION=${{ needs.version.outputs.version || 'dev' }}
          BUILD_COMMIT=${{ github.sha }}
          BUILD_TIME=${{ github.event.head_commit.timestamp || github.run_id }}
        provenance: false
        sbom: false

    - name: Generate deployment summary
      run: |
        echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** GitHub Container Registry (ghcr.io)" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -n "${{ needs.version.outputs.version }}" ]; then
          echo "**Version:** \`${{ needs.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        echo "View image: https://github.com/${{ github.repository }}/pkgs/container/$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_STEP_SUMMARY
